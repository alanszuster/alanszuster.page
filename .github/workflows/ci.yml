name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

      - name: Update Deployment Status for Preview
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment: 'preview',
              environment_url: process.env.PREVIEW_URL,
              description: 'Preview deployment successful'
            })
  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Bump version in package.json
        id: bump_version
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          new_version=$(npm version patch -m "ci: bump version to %s [skip ci]")
          echo "new_version=$new_version" >> $GITHUB_ENV
          git push origin main --follow-tags

      - name: Create Deployment
        id: create_deployment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.ref,
              required_contexts: [],
              environment: 'production',
              description: 'Production deployment',
            });
            core.setOutput('deployment_id', deployment.data.id);

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: "${{ steps.bump_version.outputs.new_version }}"
          release_name: "Release ${{ steps.bump_version.outputs.new_version }}"
          body: "Deployment URL: https://alanszuster.vercel.app"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Deployment URL
        run: echo "URL=https://alanszuster.vercel.app" >> $GITHUB_ENV

      - name: Update Deployment Status for Production
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.create_deployment.outputs.deployment_id }},
              state: 'success',
              environment: 'production',
              environment_url: 'https://alanszuster.vercel.app',
              description: 'Production deployment successful',
            })

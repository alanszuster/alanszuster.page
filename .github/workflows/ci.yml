name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  deploy-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: test

    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: NPM install
        run: npm install

      - name: Build Project Artifacts
        run: npm run build

      - name: Deploy Preview to Vercel
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "Preview URL: $url"
          echo "PREVIEW_URL=$url" >> $GITHUB_ENV
          echo "Preview deployment ready!" >> $GITHUB_STEP_SUMMARY
          echo "URL: $url" >> $GITHUB_STEP_SUMMARY

      - name: Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview deployment ready!\n\nURL: ${process.env.PREVIEW_URL}\n\nTests passed\nNext.js app tested`
            })

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test

    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: NPM install
        run: npm install

      - name: Build Vercel Output
        run: vercel build

      - name: Deploy Production to Vercel
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "Successfully deployed to production!" >> $GITHUB_STEP_SUMMARY
          echo "URL: https://alanszuster.vercel.app" >> $GITHUB_STEP_SUMMARY

      - name: Bump version
        id: bump_version
        run: |
          new_version=$(npm version patch -m "ci: bump version to %s [skip ci]")
          echo "::set-output name=new_version::${new_version}"
          git push origin main

      - name: Create GitHub Release
        uses: actions/create-release@v2
        with:
          tag_name: "v${{ steps.bump_version.outputs.new_version }}"
          release_name: "Release v${{ steps.bump_version.outputs.new_version }}"
          body: "Deployment URL: https://alanszuster.vercel.app"
          draft: false
          prerelease: false

      - name: Update Deployment Status
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment_url: 'https://alanszuster.vercel.app',
              description: 'Production deployment successful'
            })
